--// final_merged_script_fix.lua
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService= game:GetService("HttpService")
local player     = Players.LocalPlayer

-- ‡∏™‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å
local FolderPath   = "CustomerData"
local SettingsPath = "CustomerSettings"

-- ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ Executor ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:
local RequestFunc = http_request or request or HttpPost or syn and syn.request
if not RequestFunc then
    warn("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô request/syn.request => ‡∏à‡∏∞‡∏™‡πà‡∏á Webhook ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ!")
end

-- ‡πÄ‡∏ä‡πá‡∏Ñ/‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
local function SafeIsFolder(path)
    local s, r = pcall(function() return isfolder(path) end)
    return (s and r)
end
local function SafeMakeFolder(path)
    pcall(function() makefolder(path) end)
end
if not SafeIsFolder(FolderPath) then
    SafeMakeFolder(FolderPath)
end
if not SafeIsFolder(SettingsPath) then
    SafeMakeFolder(SettingsPath)
end

-- ‡πÑ‡∏ü‡∏•‡πå
local DataFile     = FolderPath.."/"..player.Name..".json"
local SettingsFile = SettingsPath.."/"..player.Name..".json"

-- Default
local DefaultData = {
    ["Webhook"]    = "", -- ‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏™‡πà URL ‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÉ‡∏´‡πâ User ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á
    ["Max Gems"]   = 0,
    ["Discord ID"] = "",
    ["Old Gems"]   = false,
    ["Is Sended"]  = false
}
local DefaultSettings = {
    ["White Screen"] = false
}

-- ‡πÇ‡∏´‡∏•‡∏î-‡πÄ‡∏ã‡∏ü Data
local function LoadData()
    if isfile(DataFile) then
        local ok, decoded = pcall(function()
            return HttpService:JSONDecode(readfile(DataFile))
        end)
        if ok and type(decoded)=="table" then
            return decoded
        end
        warn("JSON Error => Create new:", DataFile)
    end
    writefile(DataFile, HttpService:JSONEncode(DefaultData))
    return DefaultData
end
local function SaveData(tbl)
    writefile(DataFile, HttpService:JSONEncode(tbl))
end

-- ‡πÇ‡∏´‡∏•‡∏î-‡πÄ‡∏ã‡∏ü Settings (White Screen)
local function LoadSettings()
    if isfile(SettingsFile) then
        local ok, decoded = pcall(function()
            return HttpService:JSONDecode(readfile(SettingsFile))
        end)
        if ok and type(decoded)=="table" then
            return decoded
        end
        warn("JSON Error => Create new:", SettingsFile)
    end
    writefile(SettingsFile, HttpService:JSONEncode(DefaultSettings))
    return DefaultSettings
end
local function SaveSettings(tbl)
    writefile(SettingsFile, HttpService:JSONEncode(tbl))
end

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
local LocalData     = LoadData()
local LocalSettings = LoadSettings()

-- ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
local Webhook   = LocalData["Webhook"] or ""
local MaxGems   = LocalData["Max Gems"] or 0
local DiscordID = LocalData["Discord ID"] or ""
local OldGems   = LocalData["Old Gems"]
local IsSended  = LocalData["Is Sended"] or false
local WhiteScreen= LocalSettings["White Screen"] or false

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÜ
local function SafeMatchURL(str)
    -- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô str ‡πÄ‡∏õ‡πá‡∏ô nil
    if type(str)~="string" then return false end
    return (str:match("^https?://")~=nil)
end

local function TryGetGems()
    local v = 0
    pcall(function()
        v = player["_stats"].gem_amount.Value
    end)
    return v
end

local function GetLevelLobby()
    local lvl = "???"
    pcall(function()
        local gui = player.PlayerGui:WaitForChild("spawn_units", 1)
        local s = gui.Lives.Main.Desc.Level.Text
        lvl = s:gsub("Level ", "")
    end)
    return lvl
end

local currentGems = TryGetGems()
local placeId = game.PlaceId

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á webhook
local function SendNormalWebhook(title, desc)
    if not RequestFunc then return end
    if (not SafeMatchURL(Webhook)) then
        warn("Webhook is invalid => skip sending..")
        return
    end
    local bodyData = {
        content = "",
        embeds = {{
            title = title,
            description = desc,
            color = 0xFF1493
        }}
    }
    RequestFunc({
        Url = Webhook,
        Method = "POST",
        Headers = {["Content-Type"]="application/json"},
        Body = HttpService:JSONEncode(bodyData)
    })
end
local function SendEndWebhook(title, desc)
    if not RequestFunc then return end
    if (not SafeMatchURL(WebhookEnd)) then
        warn("WebhookEnd is invalid => skip sending..")
        return
    end
    local bodyData = {
        content = "<@"..DiscordID.."> <@&1006505817769521177>",
        embeds = {{
            title = title,
            description = desc,
            color = 0xFF1493
        }}
    }
    RequestFunc({
        Url = WebhookEnd,
        Method = "POST",
        Headers = {["Content-Type"]="application/json"},
        Body = HttpService:JSONEncode(bodyData)
    })
end

-- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà
if placeId == 8304191830 then
    -- Lobby
    -- Logic ‡∏´‡∏±‡∏Å MaxGems ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏ä‡∏£
    if OldGems and OldGems~=false then
        if currentGems < OldGems then
            local diff = (tonumber(OldGems) or 0) - currentGems
            MaxGems = MaxGems - diff
            LocalData["Max Gems"] = MaxGems
            LocalData["Old Gems"] = currentGems
            SaveData(LocalData)
        else
            LocalData["Old Gems"] = currentGems
            SaveData(LocalData)
        end
    else
        -- ‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ old
        LocalData["Old Gems"] = currentGems
        SaveData(LocalData)
    end
    -- ‡∏ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤
    if (currentGems >= MaxGems) and MaxGems>0 and (not IsSended) then
        IsSended = true
        LocalData["Is Sended"] = true
        SaveData(LocalData)
        local lv = GetLevelLobby()
        local desc = string.format(
            "**ùêçùêÄùêåùêÑ :** ||%s||\n**üíéGems : %d / %d**\n**Gold : %d**\n**Level : %s**",
            player.Name,
            currentGems,
            MaxGems,
            player["_stats"]["gold_amount"].Value,
            lv
        )
        SendEndWebhook("‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÄ‡∏û‡∏ä‡∏£‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!", desc)
    end
    -- ‡∏™‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥
    SendNormalWebhook("PLaNS SHOP", "**‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Lobby**")

elseif placeId == 8349889591 then
    -- InGame
    if (currentGems >= MaxGems) and MaxGems>0 and (not IsSended) then
        IsSended = true
        LocalData["Is Sended"] = true
        SaveData(LocalData)
        local lv = GetLevelLobby()
        local desc = string.format(
            "**ùêçùêÄùêåùêÑ :** ||%s||\n**üíéGems : %d / %d**\n**Gold : %d**\n**Level : %s**",
            player.Name,
            currentGems,
            MaxGems,
            player["_stats"]["gold_amount"].Value,
            lv
        )
        SendEndWebhook("‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÄ‡∏û‡∏ä‡∏£‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!", desc)
    end

    SendNormalWebhook("PLaNS SHOP", "**‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏î‡πà‡∏≤‡∏ô**")

    if OldGems and OldGems~=false then
        if currentGems < OldGems then
            local diff = (tonumber(OldGems) or 0) - currentGems
            MaxGems = MaxGems - diff
            LocalData["Max Gems"] = MaxGems
            LocalData["Old Gems"] = currentGems
            SaveData(LocalData)
        else
            LocalData["Old Gems"] = currentGems
            SaveData(LocalData)
        end
    else
        LocalData["Old Gems"] = currentGems
        SaveData(LocalData)
    end
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á UI
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/EmiyaSanZ/Lib/main/UI'))()
local Window = Library:CreateWindow({Title="PLaNS x SHOP",Center=true,AutoShow=true})

local MainTab = Window:AddTab("PLaNS x SHOP")
local SettingsBox = MainTab:AddLeftGroupbox("Settings")

-- White Screen Toggle
local wst = SettingsBox:AddToggle('White Screen',{Text='Toggle White Screen',Default=WhiteScreen})
wst:OnChanged(function(val)
    WhiteScreen = val
    LocalSettings["White Screen"] = val
    SaveSettings(LocalSettings)
    RunService:Set3dRenderingEnabled(not val)
end)

-- Webhook Input
local wh = SettingsBox:AddInput('Webhook',{
    Numeric=false,
    Finished=false,
    Text='Webhook',
    Placeholder='https://...',
    Default=Webhook
})
-- Max Gems Input
local mg = SettingsBox:AddInput('Max Gems',{
    Numeric=true,
    Finished=false,
    Text='Max Gems',
    Placeholder='‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ Gems',
    Default=MaxGems
})
-- Discord ID
local di = SettingsBox:AddInput('Discord ID',{
    Numeric=false,
    Finished=false,
    Text='Discord ID',
    Placeholder='12345678',
    Default=DiscordID
})

SettingsBox:AddButton('Save Settings',function()
    local newWebhook = wh.Value or ""
    if #newWebhook<8 then
        warn("Webhook too short")
        return
    end
    if not (newWebhook:match("^https?://")) then
        warn("Must start with https:// or http://")
        return
    end

    LocalData["Webhook"]    = newWebhook
    LocalData["Max Gems"]   = tonumber(mg.Value) or 0
    LocalData["Discord ID"] = di.Value
    LocalData["Is Sended"]  = false

    if not LocalData["Old Gems"] or (LocalData["Old Gems"]==false) then
        LocalData["Old Gems"] = 0
    end
    SaveData(LocalData)

    Webhook  = newWebhook
    MaxGems  = LocalData["Max Gems"]
    DiscordID= LocalData["Discord ID"]
    IsSended = false

    print(string.format("[Saved] Webhook=%s, Max=%d, ID=%s",Webhook,MaxGems,DiscordID))
end)

print("Final script loaded. ‡∏ñ‡πâ‡∏≤ error => ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ Webhook ‡πÄ‡∏õ‡πá‡∏ô https://.. ‡∏´‡∏£‡∏∑‡∏≠ Executor ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï http.request ‡πÑ‡∏´‡∏°")
